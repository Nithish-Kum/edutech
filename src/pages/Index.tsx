import { useState } from "react";
import { motion } from "framer-motion";
import { Button } from "@/components/ui/enhanced-button";
import { Card, CardContent } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import Header from "@/components/layout/Header";
import CourseGenerator from "@/components/course/CourseGenerator";
import ProgressDashboard from "@/components/dashboard/ProgressDashboard";
import AIprofessor from "@/components/3d/AIprofessor";
import ProfessorControls from "@/components/professor/ProfessorControls";
import heroImage from "@/assets/hero-ai-professor.jpg";
import { 
  Brain, 
  Sparkles, 
  Users, 
  BookOpen, 
  Target, 
  Zap,
  ArrowRight,
  Play
} from "lucide-react";

const Index = () => {
  const [activeTab, setActiveTab] = useState("generator");
  const [professorState, setProfessorState] = useState({
    isListening: false,
    isSpeaking: false,
    currentTopic: "Web Development"
  });

  const features = [
    {
      icon: Brain,
      title: "AI-Powered Learning",
      description: "Personalized courses generated by advanced AI technology"
    },
    {
      icon: Users,
      title: "3D AI Professor",
      description: "Interactive virtual professor for immersive learning experiences"
    },
    {
      icon: Target,
      title: "Practical Projects",
      description: "Hands-on assessments that reinforce real-world skills"
    },
    {
      icon: Zap,
      title: "Real-time Feedback",
      description: "Instant responses to questions and project evaluations"
    }
  ];

  return (
    <div className="min-h-screen bg-background">
      <Header />
      
      {/* Hero Section */}
      <motion.section 
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 1 }}
        className="relative pt-24 pb-16 px-6 overflow-hidden"
      >
        {/* Background Image with Overlay */}
        <div className="absolute inset-0 z-0">
          <img 
            src={heroImage} 
            alt="AI Professor" 
            className="w-full h-full object-cover opacity-30"
          />
          <div className="absolute inset-0 bg-gradient-to-b from-background/80 via-background/60 to-background"></div>
        </div>

        <div className="container mx-auto relative z-10">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            {/* Hero Content */}
            <motion.div
              initial={{ opacity: 0, x: -50 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8, delay: 0.2 }}
              className="space-y-8"
            >
              <div className="space-y-4">
                <motion.div
                  initial={{ scale: 0 }}
                  animate={{ scale: 1 }}
                  transition={{ delay: 0.4, type: "spring", stiffness: 200 }}
                  className="inline-flex items-center space-x-2 px-4 py-2 glass-morphism rounded-full"
                >
                  <Sparkles className="w-4 h-4 text-primary" />
                  <span className="text-sm font-medium">AI-Powered Education Platform</span>
                </motion.div>
                
                <h1 className="text-5xl lg:text-7xl font-bold leading-tight">
                  Learn with Your
                  <span className="text-gradient block">AI Professor</span>
                </h1>
                
                <p className="text-xl text-muted-foreground max-w-lg">
                  Transform your learning with personalized courses, interactive 3D AI tutoring, 
                  and hands-on projects that build real-world skills.
                </p>
              </div>

              <div className="flex flex-col sm:flex-row gap-4">
                <Button 
                  variant="hero" 
                  size="xl"
                  onClick={() => setActiveTab("generator")}
                >
                  <Play className="w-5 h-5 mr-2" />
                  Start Learning
                  <ArrowRight className="w-5 h-5 ml-2" />
                </Button>
                <Button variant="glass" size="xl" asChild>
                  <a href="/courses">
                  <BookOpen className="w-5 h-5 mr-2" />
                  View Courses
                  </a>
                </Button>
              </div>
            </motion.div>

            {/* 3D AI Professor */}
            <motion.div
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 1, delay: 0.6 }}
              className="h-96 lg:h-[500px]"
            >
              <AIprofessor 
                className="floating-animation"
                isListening={professorState.isListening}
                isSpeaking={professorState.isSpeaking}
                currentTopic={professorState.currentTopic}
                onProfessorClick={() => {
                  if (!professorState.isListening && !professorState.isSpeaking) {
                    setProfessorState(prev => ({ ...prev, isSpeaking: true }));
                    setTimeout(() => {
                      setProfessorState(prev => ({ ...prev, isSpeaking: false }));
                    }, 2000);
                  }
                }}
              />
            </motion.div>
          </div>
        </div>
      </motion.section>

      {/* Features Section */}
      <motion.section
        initial={{ opacity: 0, y: 50 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8 }}
        viewport={{ once: true }}
        className="py-16 px-6"
      >
        <div className="container mx-auto">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gradient mb-4">
              Revolutionary Learning Experience
            </h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">
              Experience education like never before with our cutting-edge AI technology
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {features.map((feature, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1, duration: 0.6 }}
                viewport={{ once: true }}
              >
                <Card className="glass-morphism border-white/20 hover:bg-white/10 transition-smooth h-full">
                  <CardContent className="p-6 text-center space-y-4">
                    <div className="mx-auto w-12 h-12 gradient-neural rounded-full flex items-center justify-center">
                      <feature.icon className="w-6 h-6 text-white" />
                    </div>
                    <h3 className="font-semibold text-foreground">{feature.title}</h3>
                    <p className="text-sm text-muted-foreground">{feature.description}</p>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </div>
      </motion.section>

      {/* Main Application Tabs */}
      <motion.section
        initial={{ opacity: 0 }}
        whileInView={{ opacity: 1 }}
        transition={{ duration: 0.8 }}
        viewport={{ once: true }}
        className="py-16 px-6"
      >
        <div className="container mx-auto">
          <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
            <TabsList className="grid w-full grid-cols-3 glass-morphism">
              <TabsTrigger value="generator" className="data-[state=active]:bg-primary/20">
                Generate Course
              </TabsTrigger>
              <TabsTrigger value="professor" className="data-[state=active]:bg-primary/20">
                AI Professor
              </TabsTrigger>
              <TabsTrigger value="progress" className="data-[state=active]:bg-primary/20">
                My Progress
              </TabsTrigger>
            </TabsList>
            
            <div className="mt-8">
              <TabsContent value="generator" className="mt-0">
                <CourseGenerator />
              </TabsContent>
              
              <TabsContent value="professor" className="mt-0">
                <div className="grid lg:grid-cols-2 gap-8 items-start">
                  {/* Interactive Professor */}
                  <motion.div
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.6 }}
                    className="h-96 lg:h-[500px]"
                  >
                    <AIprofessor 
                      isListening={professorState.isListening}
                      isSpeaking={professorState.isSpeaking}
                      currentTopic={professorState.currentTopic}
                      onProfessorClick={() => {
                        if (!professorState.isListening && !professorState.isSpeaking) {
                          setProfessorState(prev => ({ ...prev, isSpeaking: true }));
                          setTimeout(() => {
                            setProfessorState(prev => ({ ...prev, isSpeaking: false }));
                          }, 3000);
                        }
                      }}
                    />
                  </motion.div>

                  {/* Professor Controls */}
                  <motion.div
                    initial={{ opacity: 0, x: 20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.6, delay: 0.2 }}
                  >
                    <ProfessorControls
                      isListening={professorState.isListening}
                      isSpeaking={professorState.isSpeaking}
                      currentTopic={professorState.currentTopic}
                      onStartListening={() => setProfessorState(prev => ({ ...prev, isListening: true }))}
                      onStopListening={() => setProfessorState(prev => ({ ...prev, isListening: false }))}
                      onStartSpeaking={() => setProfessorState(prev => ({ ...prev, isSpeaking: true }))}
                      onStopSpeaking={() => setProfessorState(prev => ({ ...prev, isSpeaking: false }))}
                      onAskQuestion={() => {
                        setProfessorState(prev => ({ ...prev, isListening: true }));
                        setTimeout(() => {
                          setProfessorState(prev => ({ ...prev, isListening: false }));
                        }, 1500);
                      }}
                      onReset={() => setProfessorState({ isListening: false, isSpeaking: false, currentTopic: "Web Development" })}
                      onUpdateTopic={(topic) => setProfessorState(prev => ({ ...prev, currentTopic: topic }))}
                    />
                  </motion.div>
                </div>
              </TabsContent>
              
              <TabsContent value="progress" className="mt-0">
                <ProgressDashboard />
              </TabsContent>
            </div>
          </Tabs>
        </div>
      </motion.section>
    </div>
  );
};

export default Index;
